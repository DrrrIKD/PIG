version: 2.1

jobs:
  build:
    docker:
      - image: circleci/python:3.9
    steps:
      # Шаг 1: Клонирование репозитория
      - checkout

      # Шаг 2: Установка зависимостей
      - run:
          name: Install dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y git unzip openjdk-11-jdk curl
            pip install --upgrade pip
            pip install buildozer cython==0.29.36

      # Шаг 3: Установка Android Command Line Tools
      - run:
          name: Install Android SDK
          command: |
            export ANDROID_SDK_ROOT=$HOME/android-sdk
            mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
            curl --fail --retry 3 -o cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
            unzip -q cmdline-tools.zip -d $ANDROID_SDK_ROOT/cmdline-tools
            mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest
            export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH
            { yes || true; } | sdkmanager --licenses
            yes | sdkmanager --update || true
            yes | sdkmanager --install \
              "platform-tools" \
              "build-tools;36.0.0-rc1" \
              "platforms;android-33" || true

      # Шаг 4: Очистка Buildozer
      - run:
          name: Clean Buildozer Cache
          command: |
            buildozer appclean
            rm -rf ~/.buildozer

      # Шаг 5: Сборка APK
      - run:
          name: Build APK
          command: |
            export ANDROID_SDK_ROOT=$HOME/android-sdk
            buildozer -v android debug

      # Шаг 6: Отладка логов
      - run:
          name: Debug Build Logs
          command: |
            tail -n 50 .buildozer/android/platform/build.log || echo "No build log found"

      # Шаг 7: Сохранение APK
      - store_artifacts:
          path: bin/
          destination: apk-files
