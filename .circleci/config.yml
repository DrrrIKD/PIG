version: 2.1

jobs:
  build:
    docker:
      - image: circleci/android:api-33-node
    steps:
      - checkout

      # 1. Установка публичного ключа для репозитория Google Cloud SDK
      - run:
          name: Add Google Cloud SDK Public Key
          command: |
            curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg
            echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee /etc/apt/sources.list.d/google-cloud-sdk.list
            sudo apt-get update

      # 2. Установка необходимых зависимостей для Buildozer
      - run:
          name: Install Required Dependencies
          command: |
            sudo apt-get install -y python3-pip python3-venv git openjdk-11-jdk
            python3 -m pip install --upgrade pip
            python3 -m pip install buildozer

      # 3. Установка переменной окружения ANDROID_SDK_ROOT
      - run:
          name: Set ANDROID_SDK_ROOT
          command: |
            echo 'export ANDROID_SDK_ROOT=/opt/android-sdk' >> $BASH_ENV
            echo 'export PATH=$ANDROID_SDK_ROOT/tools/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH' >> $BASH_ENV
            source $BASH_ENV

      # 4. Принятие лицензий Android SDK
      - run:
          name: Accept Android SDK Licenses
          command: |
            yes | sdkmanager --licenses

      # 5. Установка платформы Android и Build-Tools
      - run:
          name: Install Android SDK Platforms and Tools
          command: |
            sdkmanager --install "platform-tools" "build-tools;33.0.0" "platforms;android-33" "cmdline-tools;latest"

      # 6. Проверка наличия aidl и других инструментов
      - run:
          name: Verify AIDL Installation
          command: |
            ls $ANDROID_SDK_ROOT/build-tools/33.0.0/aidl || echo "AIDL not found!"
            $ANDROID_SDK_ROOT/build-tools/33.0.0/aidl --version || echo "AIDL version check failed!"

      # 7. Сборка APK с использованием Buildozer
      - run:
          name: Build APK with Buildozer
          command: |
            buildozer -v android debug

      # 8. Сохранение собранного APK
      - store_artifacts:
          path: bin/
          destination: apk-files
